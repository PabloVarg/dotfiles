#! /usr/bin/env bash
set -euo pipefail

tmp_dir=$(mktemp -d)
trap "rm -rf ${tmp_dir}" EXIT

base=(
    "linux"
    "base"
    "base-devel"
    "grub"
    "git"
    "man-db"
    "yay-bin"
    "unzip"
    "openssh"
    "stow"
)

utilities=(
    "htop"
    "lf"
    "sxiv"
)

terminal=(
    "zsh"
    "zsh-syntax-highlighting"
    "tmux"
)

nvim=(
    "neovim"
    "python-pynvim"
    "nodejs"
    "bun-bin"
    "fd"
    "ripgrep"
)

dev=(
    "jq"
    "go"
    "kubectl"
    "k9s"
    "python-uv"
    "helm"
)

# Change for each hardware
firmware=(
    "ast-firmware"
    "upd72020x-fw"
    "linux-firmware-qlogic"
    "wd719x-firmware"
    "aic94xx-firmware"
)

packages_to_install=(
    "${base[@]}"
    "${utilities[@]}"
    "${terminal[@]}"
    "${nvim[@]}"
    "${dev[@]}"
)

ensure_aur_pkg_is_installed() {
    repo_dir="${1}"
    repo_url="${2}"

    if command -v "${3}" &> /dev/null; then
        return
    fi

    [[ ! -d "${repo_dir}" ]] && git clone "${repo_url}" "${repo_dir}"
    (cd "${repo_dir}" && makepkg -si)
    rm -rf "${repo_dir}"
}


ensure_yay_is_installed() {
    pkg_name="yay"
    repo_dir="${tmp_dir}/yay-bin"
    repo_url="https://aur.archlinux.org/yay-bin.git"

    ensure_aur_pkg_is_installed "${repo_dir}" "${repo_url}" "${pkg_name}"
}

sync_packages() {
    mkdir -p "${tmp_dir}/sync"

    tmp_a=$(mktemp -p "${tmp_dir}/sync")
    tmp_b=$(mktemp -p "${tmp_dir}/sync")

    # Write contents to temporary files
    yay -Qqe > "${tmp_a}"
    printf "${packages_to_install[*]}" | tr ' ' '\n' | sort > "${tmp_b}"

    # Install needed packages
    mapfile -t packages_to_add < <(comm -13 "${tmp_a}" "${tmp_b}")
    if [[ -n "${packages_to_add[@]}" ]]; then
        echo "╭──────── Script step ────────╮"
        echo "│ Installing missing packages │"
        echo "╰─────────────────────────────╯"

        yay -Sy
        yay -S "${packages_to_add[@]}"
    fi

    # Remove old packages
    mapfile -t packages_to_remove < <(comm -23 "${tmp_a}" "${tmp_b}")
    if [[ -n "${packages_to_remove[@]}" ]]; then
        echo "╭──────────── Script step ─────────────╮"
        echo "│ Removing packages not needed anymore │"
        echo "╰──────────────────────────────────────╯"

        yay -Rns "${packages_to_remove[@]}"
    fi

    # Remove orphaned packages
    mapfile -t orphaned_packages < <(yay -Qdtq)
    if [[ -n "${orphaned_packages[@]}" ]]; then
        echo "╭─────── Script step ────────╮"
        echo "│ Removing orphaned packages │"
        echo "╰────────────────────────────╯"

        yay -Rns "${orphaned_packages[@]}"
    fi

    ## Clean
    if [[ -n "${orphaned_packages[@]}" ]] || [[ -n "${packages_to_remove[@]}" ]]; then
        echo "╭── Script step ───╮"
        echo "│  Clean packages  │"
        echo "╰──────────────────╯"

        yay -Sc --noconfirm
    fi
}

# Managed packages
ensure_yay_is_installed
sync_packages
